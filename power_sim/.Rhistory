new_pf <- c(10, 15, 20, 30, 40, 45, 50, seq(100, 2000, 100))
times = c(5, 10, 20, 30, 40, 50, 60, 100, 300, 500, 900, 1200, 1500, 1800,
2100, 2400, 3600, 7200, 21600, 43200)
params <- readRDS("./all_params.RDS")
setwd("G:/HDX_sim_vol2/power_sim")
new_pf <- c(10, 15, 20, 30, 40, 45, 50, seq(100, 2000, 100))
times = c(5, 10, 20, 30, 40, 50, 60, 100, 300, 500, 900, 1200, 1500, 1800,
2100, 2400, 3600, 7200, 21600, 43200)
set.seed(17)
params <- readRDS("./all_params.RDS")
params
sequences <- sample(unique(params$sequence), 50, replace = FALSE)
all_params <- params %>%
dplyr::select(sequence, pH, step) %>%
unique() %>%
filter(sequence %in% sequences, pH == "6") %>%
group_by(sequence) %>%
slice(rep(1:n(), each = length(new_pf))) %>%
mutate(protection_factor = new_pf) %>%
mutate(charge = sample(1:5,length(new_pf),  replace = TRUE)) %>%
ungroup() %>%
data.frame()
library(dplyr)
new_pf <- c(10, 15, 20, 30, 40, 45, 50, seq(100, 2000, 100))
times = c(5, 10, 20, 30, 40, 50, 60, 100, 300, 500, 900, 1200, 1500, 1800,
2100, 2400, 3600, 7200, 21600, 43200)
set.seed(17)
params <- readRDS("./all_params.RDS")
sequences <- sample(unique(params$sequence), 50, replace = FALSE)
all_params <- params %>%
dplyr::select(sequence, pH, step) %>%
unique() %>%
filter(sequence %in% sequences, pH == "6") %>%
group_by(sequence) %>%
slice(rep(1:n(), each = length(new_pf))) %>%
mutate(protection_factor = new_pf) %>%
mutate(charge = sample(1:5,length(new_pf),  replace = TRUE)) %>%
ungroup() %>%
data.frame()
all_params
theoretical_spectra <- do.call(rbind, lapply(1:nrow(all_params), function(ith_row) {
simulate_theoretical_spectra(sequence = all_params[ith_row, "sequence"],
charge = all_params[ith_row, "charge"],
protection_factor = all_params[ith_row, "protection_factor"],
times = times,
pH = all_params[ith_row, "pH"],
temperature = 15,
n_molecules = 500,
time_step_const = all_params[ith_row, "step"],
use_markov = TRUE)
}))
library(powerHDX)
library(powerHDX)
devtools::install_github("hadexversum/powerHDX")
library(powerHDX)
new_pf <- c(10, 15, 20, 30, 40, 45, 50, seq(100, 2000, 100))
times = c(5, 10, 20, 30, 40, 50, 60, 100, 300, 500, 900, 1200, 1500, 1800,
2100, 2400, 3600, 7200, 21600, 43200)
set.seed(17)
params <- readRDS("./all_params.RDS")
sequences <- sample(unique(params$sequence), 50, replace = FALSE)
all_params <- params %>%
dplyr::select(sequence, pH, step) %>%
unique() %>%
filter(sequence %in% sequences, pH == "6") %>%
group_by(sequence) %>%
slice(rep(1:n(), each = length(new_pf))) %>%
mutate(protection_factor = new_pf) %>%
mutate(charge = sample(1:5,length(new_pf),  replace = TRUE)) %>%
ungroup() %>%
data.frame()
library(dplyr)
new_pf <- c(10, 15, 20, 30, 40, 45, 50, seq(100, 2000, 100))
times = c(5, 10, 20, 30, 40, 50, 60, 100, 300, 500, 900, 1200, 1500, 1800,
2100, 2400, 3600, 7200, 21600, 43200)
set.seed(17)
params <- readRDS("./all_params.RDS")
sequences <- sample(unique(params$sequence), 50, replace = FALSE)
all_params <- params %>%
dplyr::select(sequence, pH, step) %>%
unique() %>%
filter(sequence %in% sequences, pH == "6") %>%
group_by(sequence) %>%
slice(rep(1:n(), each = length(new_pf))) %>%
mutate(protection_factor = new_pf) %>%
mutate(charge = sample(1:5,length(new_pf),  replace = TRUE)) %>%
ungroup() %>%
data.frame()
theoretical_spectra <- do.call(rbind, lapply(1:nrow(all_params), function(ith_row) {
simulate_theoretical_spectra(sequence = all_params[ith_row, "sequence"],
charge = all_params[ith_row, "charge"],
protection_factor = all_params[ith_row, "protection_factor"],
times = times,
pH = all_params[ith_row, "pH"],
temperature = 15,
n_molecules = 500,
time_step_const = all_params[ith_row, "step"],
use_markov = TRUE)
}))
spectra_by_seq <- split(theoretical_spectra,
f = theoretical_spectra[, c("Sequence")])
spectra_by_seq
theoretical_spectra <- do.call(rbind, lapply(1:nrow(all_params), function(ith_row) {
simulate_theoretical_spectra(sequence = all_params[ith_row, "sequence"],
charge = 1:3,
protection_factor = all_params[ith_row, "protection_factor"],
times = times,
pH = all_params[ith_row, "pH"],
temperature = 15,
n_molecules = 500,
time_step_const = all_params[ith_row, "step"],
use_markov = TRUE)
}))
theoretical_spectra
