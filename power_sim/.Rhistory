geom_label(aes(label = formatC(Power, digits = 2, width = 1)))
data_col <- results %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
filter(State_1 %in% pfs, State_2 %in% pfs) %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
select_results(diff = 0.1) %>%
filter(State_1 == State_2)
p +
geom_rect(data = data_col, col = "black", fill = "white", xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0)
select_results <- function(data, diff = 0.01) {
tests_id <- data %>%
filter(State_1 == State_2) %>%
group_by(Test_id) %>%
summarise(m_error = mean(Power)) %>%
filter(m_error <= m_error[Test_id == "Deuteros lm_identity"] + diff) %>%
select(Test_id)
data %>%
filter(Test_id %in% c(tests_id$Test_id, "Deuteros lm_identity", "MEMHDX lmm_identity"))
}
select_power <- function(data, diff = 0.01) {
tests_id <- data %>%
filter(State_1 != State_2) %>%
group_by(Test_id) %>%
summarise(m_power = mean(Power)) %>%
filter(m_power >= m_power[Test_id == "Deuteros lm_identity"] + diff) %>%
select(Test_id)
data %>%
filter(Test_id %in% c(tests_id$Test_id, "Deuteros lm_identity", "MEMHDX lmm_identity"))
}
pfs <- c(10, 15, 40, 50, 90, 100, 200)
# New facet label names for dose variable
pf1.labs <- paste("PF1 =", pfs)
names(pf1.labs) <- as.character(pfs)
# New facet label names for supp variable
pf2.labs <- paste("PF2 =", pfs)
names(pf2.labs) <- as.character(pfs)
p <- sim_results %>%
select_results(diff = 0) %>%
select_power(diff = 0.1) %>%
filter(State_1 %in% pfs, State_2 %in% pfs) %>%
ggplot(aes(x = Test_id, y = Power, fill = Test_id)) +
geom_col()+
ylab("Rejection rate") +
theme_minimal() +
ylim(0, 1.15) +
# geom_text(aes(label=Power), position=position_dodge(width=0.9), vjust=-0.25, size = 3) +
facet_grid(State_1~State_2, labeller = labeller(State_2 = pf1.labs, State_1 = pf2.labs)) +
ggtitle("Rejection rate in pairwise testing") +
theme(axis.text.x=element_blank(),
axis.title.x=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))+
geom_label(aes(label = formatC(Power, digits = 2, width = 1)))
p
times = c(5, 10, 20, 30, 40, 50, 60, 100, 300, 500, 900, 1200, 1500, 1800,
2100, 2400, 3600, 7200, 21600, 43200)
spec1 <- simulate_theoretical_spectra("PPAQHI", protection_factor = 10, charge = 1:3, times = times)
spec2 <- simulate_theoretical_spectra("PPAQHI", protection_factor = 20, charge = 1:3, times = times)
library(powerHDX)
times = c(5, 10, 20, 30, 40, 50, 60, 100, 300, 500, 900, 1200, 1500, 1800,
2100, 2400, 3600, 7200, 21600, 43200)
spec1 <- simulate_theoretical_spectra("PPAQHI", protection_factor = 10, charge = 1:3, times = times)
spec2 <- simulate_theoretical_spectra("PPAQHI", protection_factor = 20, charge = 1:3, times = times)
spec3 <- simulate_theoretical_spectra("PPAQHI", protection_factor = 30, charge = 1:3, times = times)
spectra <- rbind(spec1, spec2, spec3)
spectra
get_noisy_deuteration_curves(spectra,
compare_pairs = TRUE,
reference = "all",
n_runs = 4,
n_replicates = 1)
data <- a[[1]][[1]]
library(powerHDX)
times = c(5, 10, 20, 30, 40, 50, 60, 100, 300, 500, 900, 1200, 1500, 1800,
2100, 2400, 3600, 7200, 21600, 43200)
spec1 <- simulate_theoretical_spectra("PPAQHI", protection_factor = 10, charge = 1:3, times = times)
spec2 <- simulate_theoretical_spectra("PPAQHI", protection_factor = 20, charge = 1:3, times = times)
spec3 <- simulate_theoretical_spectra("PPAQHI", protection_factor = 30, charge = 1:3, times = times)
spectra <- rbind(spec1, spec2, spec3)
a <- get_noisy_deuteration_curves(spectra,
compare_pairs = TRUE,
reference = "all",
n_runs = 4,
n_replicates = 1)
data <- a[[1]][[1]]
data
Transformation = c("log", "identity")
data[["id"]] <- paste0(data$Rep, data$Charge, data$Experimental_state)
data
Transformation = "identity"
if(trans == "log") {
transformed_data <- data
transformed_data[["Exposure"]] = log(transformed_data[["Exposure"]] + 1)
} else {
transformed_data <- data
}
trans = "identity"
if(trans == "log") {
transformed_data <- data
transformed_data[["Exposure"]] = log(transformed_data[["Exposure"]] + 1)
} else {
transformed_data <- data
}
States = unique(data$State)
States
knots <- unique(setdiff(transformed_data$Exposure, c(max(transformed_data$Exposure), min(transformed_data$Exposure))))
knots
times
unique(transformed_data$Exposure)
Test = aic = loglik = Test_statistic = p_value = rep(NA, length(knots))
k = 4
knots
k = 1
knot = 4
knots
X <- sapply(1:length(knot), function(k) {
truncated_lines(transformed_data$Exposure, knot[k])
})
truncated_lines <- function(x, kappa){
(x - kappa)*(x > kappa)
}
X <- sapply(1:length(knot), function(k) {
truncated_lines(transformed_data$Exposure, knot[k])
})
X
transformed_data$Exposure
transformed_data
remove(k)
X <- sapply(1:length(knot), function(k) {
truncated_lines(transformed_data$Exposure, knot[k])
})
X
knot
1:length(knots)
X <- sapply(1:length(knot), function(k) {
truncated_lines(transformed_data$Exposure, knots[k])
})
X
X <- sapply(1:length(knot), function(k) {
truncated_lines(transformed_data$Exposure, knots[k])
})
X
knot
1:length(knot)
knots
knots[k]
1:length(knot)
k = 1
knots[k]
1:length(knots)
knot
X <- truncated_lines(transformed_data$Exposure, knots[knot])
X
knots[knot]
transformed_data$Exposure
# continuous, identity
model = lmerTest::lmer(Mass ~ Exposure*State + (1|id) + X,
data = transformed_data,
REML = FALSE)
model
summary(model)
coefficients(model)
model = lmerTest::lmer(Mass ~ Exposure*State + (1|id) + X,
data = transformed_data,
REML = FALSE)
model_reduced = lmerTest::lmer(Mass ~ Exposure + (1|id) + X,
data = transformed_data,
REML = FALSE)
result = anova(model, model_reduced)
result
States
a
data <- a[[6]][[1]]
Transformation = c("log", "identity")
data[["id"]] <- paste0(data$Rep, data$Charge, data$Experimental_state)
data
States = unique(data$State)
knots <- unique(setdiff(transformed_data$Exposure, c(max(transformed_data$Exposure), min(transformed_data$Exposure))))
Test = aic = loglik = Test_statistic = p_value = rep(NA, length(knots))
X <- truncated_lines(transformed_data$Exposure, knots[knot])
# continuous, identity
model = lmerTest::lmer(Mass ~ Exposure*State + (1|id) + X,
data = transformed_data,
REML = FALSE)
model_reduced = lmerTest::lmer(Mass ~ Exposure + (1|id) + X,
data = transformed_data,
REML = FALSE)
result = anova(model, model_reduced)
result
if(trans == "log") {
transformed_data <- data
transformed_data[["Exposure"]] = log(transformed_data[["Exposure"]] + 1)
} else {
transformed_data <- data
}
knots <- unique(setdiff(transformed_data$Exposure, c(max(transformed_data$Exposure), min(transformed_data$Exposure))))
Test = aic = loglik = Test_statistic = p_value = rep(NA, length(knots))
X <- truncated_lines(transformed_data$Exposure, knots[knot])
# continuous, identity
model = lmerTest::lmer(Mass ~ Exposure*State + (1|id) + X,
data = transformed_data,
REML = FALSE)
model_reduced = lmerTest::lmer(Mass ~ Exposure + (1|id) + X,
data = transformed_data,
REML = FALSE)
result = anova(model, model_reduced)
result
transformed_data
21*24
X
library(dplyr)
transformed_data = transformed_data %>% filter(Esposure == 30)
transformed_data = transformed_data %>% filter(Exposure == 30)
transformed_data
# continuous, identity
model = lmerTest::lmer(Mass ~ Exposure*State + (1|id) + X,
data = transformed_data,
REML = FALSE)
X <- truncated_lines(transformed_data$Exposure, knots[knot])
X
# continuous, identity
model = lmerTest::lmer(Mass ~ Exposure*State + (1|id) + X,
data = transformed_data,
REML = FALSE)
transformed_data
# continuous, identity
model = lmerTest::lmer(Mass ~ State + (1|id) + X,
data = transformed_data,
REML = FALSE)
17*sqrt(3)/8
setwd("G:/HDX_sim_vol2/power_sim/mixed")
library(ggplot2)
library(dplyr)
library(stringr)
files <- list.files(path = "./results", pattern = "\\.RDS$", full.names = TRUE)
results <- do.call("rbind", lapply(files, readRDS))
results <- results %>%
filter(Transformation == "identity") %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
filter(Time != "categorical" | is.na(Time)) %>%
select(-Time)
sim_results = results %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
ungroup()
select_results <- function(data, diff = 0.01) {
tests_id <- data %>%
filter(State_1 == State_2) %>%
group_by(Test_id) %>%
summarise(m_error = mean(Power)) %>%
filter(m_error <= m_error[Test_id == "Deuteros lm_identity"] + diff) %>%
select(Test_id)
data %>%
filter(Test_id %in% tests_id$Test_id)
}
p <- sim_results %>%
select_results(diff = 0.05) %>%
ggplot(aes(x = Test_id, y = Power, fill = Test_id)) +
geom_col()+
ylab("Rejection rate") +
theme_minimal() +
ylim(0, 1.15) +
# geom_text(aes(label=Power), position=position_dodge(width=0.9), vjust=-0.25, size = 3) +
facet_grid(State_1~State_2) +
ggtitle("Rejection rate in pairwise testing") +
theme(axis.text.x=element_blank(),
axis.title.x=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))+
geom_label(aes(label = formatC(Power, digits = 2, width = 4)))
data_col <- results %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
filter(State_1 == State_2)
p +
geom_rect(data = data_col, col = "black", fill = "white", xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0)
pfs <- c(10, 15, 40, 50, 90, 100, 200)
# New facet label names for dose variable
pf1.labs <- paste("PF1 =", pfs)
names(pf1.labs) <- as.character(pfs)
# New facet label names for supp variable
pf2.labs <- paste("PF2 =", pfs)
names(pf2.labs) <- as.character(pfs)
p <- sim_results %>%
select_results(diff = 0) %>%
filter(State_1 %in% pfs, State_2 %in% pfs) %>%
filter(Test_id %in% c("2100_id_identity", "2400_id_identity", "3600_id_identity", "Deuteros lm_identity")) %>%
ggplot(aes(x = Test_id, y = Power, fill = Test_id)) +
geom_col()+
ylab("Rejection rate") +
theme_minimal() +
ylim(0, 1.15) +
# geom_text(aes(label=Power), position=position_dodge(width=0.9), vjust=-0.25, size = 3) +
facet_grid(State_1~State_2, labeller = labeller(State_2 = pf1.labs, State_1 = pf2.labs)) +
ggtitle("Rejection rate in pairwise testing") +
theme(axis.text.x=element_blank(),
axis.title.x=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))+
geom_label(aes(label = formatC(Power, digits = 2, width = 1)))
data_col <- results %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
filter(Test_id %in% c("2100_id_identity", "2400_id_identity", "3600_id_identity", "Deuteros lm_identity")) %>%
filter(State_1 %in% pfs, State_2 %in% pfs) %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
select_results(diff = 0.1) %>%
filter(State_1 == State_2)
p +
geom_rect(data = data_col, col = "black", fill = "white", xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0)
p <- sim_results %>%
select_results(diff = 0.05) %>%
ggplot(aes(x = Test_id, y = Power, fill = Test_id)) +
geom_col()+
ylab("Rejection rate") +
theme_minimal() +
ylim(0, 1.15) +
# geom_text(aes(label=Power), position=position_dodge(width=0.9), vjust=-0.25, size = 3) +
facet_grid(State_1~State_2) +
ggtitle("Rejection rate in pairwise testing") +
theme(axis.text.x=element_blank(),
axis.title.x=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))+
geom_label(aes(label = formatC(Power, digits = 2, width = 4)))
data_col <- results %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
filter(State_1 == State_2)
p +
geom_rect(data = data_col, col = "black", fill = "white", xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0)
p <- sim_results %>%
select_results(diff = 0.01) %>%
ggplot(aes(x = Test_id, y = Power, fill = Test_id)) +
geom_col()+
ylab("Rejection rate") +
theme_minimal() +
ylim(0, 1.15) +
# geom_text(aes(label=Power), position=position_dodge(width=0.9), vjust=-0.25, size = 3) +
facet_grid(State_1~State_2) +
ggtitle("Rejection rate in pairwise testing") +
theme(axis.text.x=element_blank(),
axis.title.x=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))+
geom_label(aes(label = formatC(Power, digits = 2, width = 4)))
data_col <- results %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
filter(State_1 == State_2)
p +
geom_rect(data = data_col, col = "black", fill = "white", xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0)
p <- sim_results %>%
select_results(diff = 0.01) %>%
select_power(DIFF = 0.1) %>%
ggplot(aes(x = Test_id, y = Power, fill = Test_id)) +
geom_col()+
ylab("Rejection rate") +
theme_minimal() +
ylim(0, 1.15) +
# geom_text(aes(label=Power), position=position_dodge(width=0.9), vjust=-0.25, size = 3) +
facet_grid(State_1~State_2) +
ggtitle("Rejection rate in pairwise testing") +
theme(axis.text.x=element_blank(),
axis.title.x=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))+
geom_label(aes(label = formatC(Power, digits = 2, width = 4)))
data_col <- results %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
filter(State_1 == State_2)
select_power <- function(data, diff = 0.01) {
tests_id <- data %>%
filter(State_1 != State_2) %>%
group_by(Test_id) %>%
summarise(m_power = mean(Power)) %>%
filter(m_power >= m_power[Test_id == "Deuteros lm_identity"] + diff) %>%
select(Test_id)
data %>%
filter(Test_id %in% c(tests_id$Test_id, "Deuteros lm_identity", "MEMHDX lmm_identity"))
}
p <- sim_results %>%
select_results(diff = 0.01) %>%
select_power(DIFF = 0.1) %>%
ggplot(aes(x = Test_id, y = Power, fill = Test_id)) +
geom_col()+
ylab("Rejection rate") +
theme_minimal() +
ylim(0, 1.15) +
# geom_text(aes(label=Power), position=position_dodge(width=0.9), vjust=-0.25, size = 3) +
facet_grid(State_1~State_2) +
ggtitle("Rejection rate in pairwise testing") +
theme(axis.text.x=element_blank(),
axis.title.x=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))+
geom_label(aes(label = formatC(Power, digits = 2, width = 4)))
data_col <- results %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
filter(State_1 == State_2)
p +
geom_rect(data = data_col, col = "black", fill = "white", xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0)
p <- sim_results %>%
select_results(diff = 0.01) %>%
select_power(diff = 0.3) %>%
ggplot(aes(x = Test_id, y = Power, fill = Test_id)) +
geom_col()+
ylab("Rejection rate") +
theme_minimal() +
ylim(0, 1.15) +
# geom_text(aes(label=Power), position=position_dodge(width=0.9), vjust=-0.25, size = 3) +
facet_grid(State_1~State_2) +
ggtitle("Rejection rate in pairwise testing") +
theme(axis.text.x=element_blank(),
axis.title.x=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))+
geom_label(aes(label = formatC(Power, digits = 2, width = 4)))
data_col <- results %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
filter(State_1 == State_2)
p +
geom_rect(data = data_col, col = "black", fill = "white", xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0)
p <- sim_results %>%
select_results(diff = 0.01) %>%
select_power(diff = 0.2) %>%
ggplot(aes(x = Test_id, y = Power, fill = Test_id)) +
geom_col()+
ylab("Rejection rate") +
theme_minimal() +
ylim(0, 1.15) +
# geom_text(aes(label=Power), position=position_dodge(width=0.9), vjust=-0.25, size = 3) +
facet_grid(State_1~State_2) +
ggtitle("Rejection rate in pairwise testing") +
theme(axis.text.x=element_blank(),
axis.title.x=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))+
geom_label(aes(label = formatC(Power, digits = 2, width = 4)))
data_col <- results %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
filter(State_1 == State_2)
p +
geom_rect(data = data_col, col = "black", fill = "white", xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0)
p <- sim_results %>%
select_results(diff = 0.01) %>%
select_power(diff = 0.1) %>%
ggplot(aes(x = Test_id, y = Power, fill = Test_id)) +
geom_col()+
ylab("Rejection rate") +
theme_minimal() +
ylim(0, 1.15) +
# geom_text(aes(label=Power), position=position_dodge(width=0.9), vjust=-0.25, size = 3) +
facet_grid(State_1~State_2) +
ggtitle("Rejection rate in pairwise testing") +
theme(axis.text.x=element_blank(),
axis.title.x=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))+
geom_label(aes(label = formatC(Power, digits = 2, width = 4)))
data_col <- results %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
filter(State_1 == State_2)
p +
geom_rect(data = data_col, col = "black", fill = "white", xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0)
pfs <- c(10, 15, 40, 50, 90, 100, 200)
# New facet label names for dose variable
pf1.labs <- paste("PF1 =", pfs)
names(pf1.labs) <- as.character(pfs)
# New facet label names for supp variable
pf2.labs <- paste("PF2 =", pfs)
names(pf2.labs) <- as.character(pfs)
p <- sim_results %>%
select_results(diff = 0.01) %>%
select_power(diff = 0.1) %>%
filter(State_1 %in% pfs, State_2 %in% pfs) %>%
ggplot(aes(x = Test_id, y = Power, fill = Test_id)) +
geom_col()+
ylab("Rejection rate") +
theme_minimal() +
ylim(0, 1.15) +
# geom_text(aes(label=Power), position=position_dodge(width=0.9), vjust=-0.25, size = 3) +
facet_grid(State_1~State_2, labeller = labeller(State_2 = pf1.labs, State_1 = pf2.labs)) +
ggtitle("Rejection rate in pairwise testing") +
theme(axis.text.x=element_blank(),
axis.title.x=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))+
geom_label(aes(label = formatC(Power, digits = 2, width = 1)))
data_col <- results %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
filter(Test_id %in% c("2100_id_identity", "2400_id_identity", "3600_id_identity", "Deuteros lm_identity")) %>%
filter(State_1 %in% pfs, State_2 %in% pfs) %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
select_results(diff = 0.1) %>%
filter(State_1 == State_2)
p +
geom_rect(data = data_col, col = "black", fill = "white", xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0)
