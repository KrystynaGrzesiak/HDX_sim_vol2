model = lmerTest::lmer(Mass ~ Exposure*State + (1|id) + X,
data = transformed_data,
REML = FALSE)
transformed_data
# continuous, identity
model = lmerTest::lmer(Mass ~ State + (1|id) + X,
data = transformed_data,
REML = FALSE)
17*sqrt(3)/8
setwd("G:/HDX_sim_vol2/power_sim/mixed")
library(ggplot2)
library(dplyr)
library(stringr)
files <- list.files(path = "./results", pattern = "\\.RDS$", full.names = TRUE)
results <- do.call("rbind", lapply(files, readRDS))
results <- results %>%
filter(Transformation == "identity") %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
filter(Time != "categorical" | is.na(Time)) %>%
select(-Time)
sim_results = results %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
ungroup()
select_results <- function(data, diff = 0.01) {
tests_id <- data %>%
filter(State_1 == State_2) %>%
group_by(Test_id) %>%
summarise(m_error = mean(Power)) %>%
filter(m_error <= m_error[Test_id == "Deuteros lm_identity"] + diff) %>%
select(Test_id)
data %>%
filter(Test_id %in% tests_id$Test_id)
}
p <- sim_results %>%
select_results(diff = 0.05) %>%
ggplot(aes(x = Test_id, y = Power, fill = Test_id)) +
geom_col()+
ylab("Rejection rate") +
theme_minimal() +
ylim(0, 1.15) +
# geom_text(aes(label=Power), position=position_dodge(width=0.9), vjust=-0.25, size = 3) +
facet_grid(State_1~State_2) +
ggtitle("Rejection rate in pairwise testing") +
theme(axis.text.x=element_blank(),
axis.title.x=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))+
geom_label(aes(label = formatC(Power, digits = 2, width = 4)))
data_col <- results %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
filter(State_1 == State_2)
p +
geom_rect(data = data_col, col = "black", fill = "white", xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0)
pfs <- c(10, 15, 40, 50, 90, 100, 200)
# New facet label names for dose variable
pf1.labs <- paste("PF1 =", pfs)
names(pf1.labs) <- as.character(pfs)
# New facet label names for supp variable
pf2.labs <- paste("PF2 =", pfs)
names(pf2.labs) <- as.character(pfs)
p <- sim_results %>%
select_results(diff = 0) %>%
filter(State_1 %in% pfs, State_2 %in% pfs) %>%
filter(Test_id %in% c("2100_id_identity", "2400_id_identity", "3600_id_identity", "Deuteros lm_identity")) %>%
ggplot(aes(x = Test_id, y = Power, fill = Test_id)) +
geom_col()+
ylab("Rejection rate") +
theme_minimal() +
ylim(0, 1.15) +
# geom_text(aes(label=Power), position=position_dodge(width=0.9), vjust=-0.25, size = 3) +
facet_grid(State_1~State_2, labeller = labeller(State_2 = pf1.labs, State_1 = pf2.labs)) +
ggtitle("Rejection rate in pairwise testing") +
theme(axis.text.x=element_blank(),
axis.title.x=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))+
geom_label(aes(label = formatC(Power, digits = 2, width = 1)))
data_col <- results %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
filter(Test_id %in% c("2100_id_identity", "2400_id_identity", "3600_id_identity", "Deuteros lm_identity")) %>%
filter(State_1 %in% pfs, State_2 %in% pfs) %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
select_results(diff = 0.1) %>%
filter(State_1 == State_2)
p +
geom_rect(data = data_col, col = "black", fill = "white", xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0)
p <- sim_results %>%
select_results(diff = 0.05) %>%
ggplot(aes(x = Test_id, y = Power, fill = Test_id)) +
geom_col()+
ylab("Rejection rate") +
theme_minimal() +
ylim(0, 1.15) +
# geom_text(aes(label=Power), position=position_dodge(width=0.9), vjust=-0.25, size = 3) +
facet_grid(State_1~State_2) +
ggtitle("Rejection rate in pairwise testing") +
theme(axis.text.x=element_blank(),
axis.title.x=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))+
geom_label(aes(label = formatC(Power, digits = 2, width = 4)))
data_col <- results %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
filter(State_1 == State_2)
p +
geom_rect(data = data_col, col = "black", fill = "white", xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0)
p <- sim_results %>%
select_results(diff = 0.01) %>%
ggplot(aes(x = Test_id, y = Power, fill = Test_id)) +
geom_col()+
ylab("Rejection rate") +
theme_minimal() +
ylim(0, 1.15) +
# geom_text(aes(label=Power), position=position_dodge(width=0.9), vjust=-0.25, size = 3) +
facet_grid(State_1~State_2) +
ggtitle("Rejection rate in pairwise testing") +
theme(axis.text.x=element_blank(),
axis.title.x=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))+
geom_label(aes(label = formatC(Power, digits = 2, width = 4)))
data_col <- results %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
filter(State_1 == State_2)
p +
geom_rect(data = data_col, col = "black", fill = "white", xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0)
p <- sim_results %>%
select_results(diff = 0.01) %>%
select_power(DIFF = 0.1) %>%
ggplot(aes(x = Test_id, y = Power, fill = Test_id)) +
geom_col()+
ylab("Rejection rate") +
theme_minimal() +
ylim(0, 1.15) +
# geom_text(aes(label=Power), position=position_dodge(width=0.9), vjust=-0.25, size = 3) +
facet_grid(State_1~State_2) +
ggtitle("Rejection rate in pairwise testing") +
theme(axis.text.x=element_blank(),
axis.title.x=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))+
geom_label(aes(label = formatC(Power, digits = 2, width = 4)))
data_col <- results %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
filter(State_1 == State_2)
select_power <- function(data, diff = 0.01) {
tests_id <- data %>%
filter(State_1 != State_2) %>%
group_by(Test_id) %>%
summarise(m_power = mean(Power)) %>%
filter(m_power >= m_power[Test_id == "Deuteros lm_identity"] + diff) %>%
select(Test_id)
data %>%
filter(Test_id %in% c(tests_id$Test_id, "Deuteros lm_identity", "MEMHDX lmm_identity"))
}
p <- sim_results %>%
select_results(diff = 0.01) %>%
select_power(DIFF = 0.1) %>%
ggplot(aes(x = Test_id, y = Power, fill = Test_id)) +
geom_col()+
ylab("Rejection rate") +
theme_minimal() +
ylim(0, 1.15) +
# geom_text(aes(label=Power), position=position_dodge(width=0.9), vjust=-0.25, size = 3) +
facet_grid(State_1~State_2) +
ggtitle("Rejection rate in pairwise testing") +
theme(axis.text.x=element_blank(),
axis.title.x=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))+
geom_label(aes(label = formatC(Power, digits = 2, width = 4)))
data_col <- results %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
filter(State_1 == State_2)
p +
geom_rect(data = data_col, col = "black", fill = "white", xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0)
p <- sim_results %>%
select_results(diff = 0.01) %>%
select_power(diff = 0.3) %>%
ggplot(aes(x = Test_id, y = Power, fill = Test_id)) +
geom_col()+
ylab("Rejection rate") +
theme_minimal() +
ylim(0, 1.15) +
# geom_text(aes(label=Power), position=position_dodge(width=0.9), vjust=-0.25, size = 3) +
facet_grid(State_1~State_2) +
ggtitle("Rejection rate in pairwise testing") +
theme(axis.text.x=element_blank(),
axis.title.x=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))+
geom_label(aes(label = formatC(Power, digits = 2, width = 4)))
data_col <- results %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
filter(State_1 == State_2)
p +
geom_rect(data = data_col, col = "black", fill = "white", xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0)
p <- sim_results %>%
select_results(diff = 0.01) %>%
select_power(diff = 0.2) %>%
ggplot(aes(x = Test_id, y = Power, fill = Test_id)) +
geom_col()+
ylab("Rejection rate") +
theme_minimal() +
ylim(0, 1.15) +
# geom_text(aes(label=Power), position=position_dodge(width=0.9), vjust=-0.25, size = 3) +
facet_grid(State_1~State_2) +
ggtitle("Rejection rate in pairwise testing") +
theme(axis.text.x=element_blank(),
axis.title.x=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))+
geom_label(aes(label = formatC(Power, digits = 2, width = 4)))
data_col <- results %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
filter(State_1 == State_2)
p +
geom_rect(data = data_col, col = "black", fill = "white", xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0)
p <- sim_results %>%
select_results(diff = 0.01) %>%
select_power(diff = 0.1) %>%
ggplot(aes(x = Test_id, y = Power, fill = Test_id)) +
geom_col()+
ylab("Rejection rate") +
theme_minimal() +
ylim(0, 1.15) +
# geom_text(aes(label=Power), position=position_dodge(width=0.9), vjust=-0.25, size = 3) +
facet_grid(State_1~State_2) +
ggtitle("Rejection rate in pairwise testing") +
theme(axis.text.x=element_blank(),
axis.title.x=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))+
geom_label(aes(label = formatC(Power, digits = 2, width = 4)))
data_col <- results %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
filter(State_1 == State_2)
p +
geom_rect(data = data_col, col = "black", fill = "white", xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0)
pfs <- c(10, 15, 40, 50, 90, 100, 200)
# New facet label names for dose variable
pf1.labs <- paste("PF1 =", pfs)
names(pf1.labs) <- as.character(pfs)
# New facet label names for supp variable
pf2.labs <- paste("PF2 =", pfs)
names(pf2.labs) <- as.character(pfs)
p <- sim_results %>%
select_results(diff = 0.01) %>%
select_power(diff = 0.1) %>%
filter(State_1 %in% pfs, State_2 %in% pfs) %>%
ggplot(aes(x = Test_id, y = Power, fill = Test_id)) +
geom_col()+
ylab("Rejection rate") +
theme_minimal() +
ylim(0, 1.15) +
# geom_text(aes(label=Power), position=position_dodge(width=0.9), vjust=-0.25, size = 3) +
facet_grid(State_1~State_2, labeller = labeller(State_2 = pf1.labs, State_1 = pf2.labs)) +
ggtitle("Rejection rate in pairwise testing") +
theme(axis.text.x=element_blank(),
axis.title.x=element_blank()) +
theme(plot.title = element_text(hjust = 0.5))+
geom_label(aes(label = formatC(Power, digits = 2, width = 1)))
data_col <- results %>%
mutate(Test_id = paste0(Test, "_", Transformation)) %>%
filter(Test_id %in% c("2100_id_identity", "2400_id_identity", "3600_id_identity", "Deuteros lm_identity")) %>%
filter(State_1 %in% pfs, State_2 %in% pfs) %>%
group_by(Test_id, State_1, State_2) %>%
summarise(Power = round(mean(Significant_difference, na.rm = TRUE), 2)) %>%
select_results(diff = 0.1) %>%
filter(State_1 == State_2)
p +
geom_rect(data = data_col, col = "black", fill = "white", xmin = -Inf, xmax = Inf,
ymin = -Inf, ymax = Inf, alpha = 0)
library(powerHDX)
times = c(5, 10, 20, 30, 40, 50, 60, 100, 300, 500, 900, 1200, 1500, 1800,
2100, 2400, 3600, 7200, 21600, 43200)
spec1 <- simulate_theoretical_spectra("PPAQHI", protection_factor = 10, charge = 1:3, times = times)
spec2 <- simulate_theoretical_spectra("PPAQHI", protection_factor = 20, charge = 1:3, times = times)
spec3 <- simulate_theoretical_spectra("PPAQHI", protection_factor = 30, charge = 1:3, times = times)
spectra <- rbind(spec1, spec2, spec3)
a <- get_noisy_deuteration_curves(spectra,
compare_pairs = TRUE,
reference = "all",
n_runs = 4,
n_replicates = 1)
data <- a[[6]][[1]]
library(powerHDX)
times = c(5, 10, 20, 30, 40, 50, 60, 100, 300, 500, 900, 1200, 1500, 1800,
2100, 2400, 3600, 7200, 21600, 43200)
spec1 <- simulate_theoretical_spectra("PPAQHI", protection_factor = 10, charge = 1:3, times = times)
spec2 <- simulate_theoretical_spectra("PPAQHI", protection_factor = 20, charge = 1:3, times = times)
spec3 <- simulate_theoretical_spectra("PPAQHI", protection_factor = 30, charge = 1:3, times = times)
spectra <- rbind(spec1, spec2, spec3)
a <- get_noisy_deuteration_curves(spectra,
compare_pairs = TRUE,
reference = "all",
n_runs = 4,
n_replicates = 1)
data <- a[[1]][[1]]
States = unique(data$State)
data[["id"]] <- paste0(data$Rep, data$Charge, data$Experimental_state)
Test = aic = loglik = Test_statistic = p_value = rep(NA, 2)
knots <- unique(setdiff(data$Exposure, c(max(data$Exposure), min(data$Exposure))))
X <- sapply(knots, function(k) {
truncated_lines(data$Exposure, k)
})
library(glmnet)
truncated_lines <- function(x, kappa){
(x - kappa)*(x > kappa)
}
States = unique(data$State)
data[["id"]] <- paste0(data$Rep, data$Charge, data$Experimental_state)
Test = aic = loglik = Test_statistic = p_value = rep(NA, 2)
knots <- unique(setdiff(data$Exposure, c(max(data$Exposure), min(data$Exposure))))
X <- sapply(knots, function(k) {
truncated_lines(data$Exposure, k)
})
colnames(X) <- c(paste0("knot_", as.character(knots)))
#RIDGE
cv_fit <- glmnet(X, data[["Mass"]], alpha = 0, lambda = 0.001)
coefs <- coefficients(cv_fit)
X_reduced <- cbind(intercept = 1, X)[, which(abs(coefs) >= 2*10^(-5))]
data
model = lmerTest::lmer(Mass ~ Exposure*Experimental_state + (1|id) + (1|Exposure) + X_reduced,
data = data,
REML = FALSE)
model_reduced = lmerTest::lmer(Mass ~ Exposure + (1|id) + X_reduced,
data = data,
REML = FALSE)
result = anova(model, model_reduced)
result
model = lmerTest::lmer(Mass ~ Exposure*Experimental_state + (1|id) + X_reduced,
data = data,
REML = FALSE)
model_reduced = lmerTest::lmer(Mass ~ Exposure + (1|id) + X_reduced,
data = data,
REML = FALSE)
result = anova(model, model_reduced)
result
States = unique(data$State)
data[["id"]] <- paste0(data$Rep, data$Charge, data$Experimental_state)
Test = aic = loglik = Test_statistic = p_value = NA
knots <- unique(setdiff(data$Exposure, c(max(data$Exposure), min(data$Exposure))))
X <- sapply(knots, function(k) {
truncated_lines(data$Exposure, k)
})
colnames(X) <- c(paste0("knot_", as.character(knots)))
#RIDGE
cv_fit <- glmnet(X, data[["Mass"]], alpha = 0, lambda = 0.001)
coefs <- coefficients(cv_fit)
X_reduced <- cbind(intercept = 1, X)[, which(abs(coefs) >= 2*10^(-5))]
model = lmerTest::lmer(Mass ~ Exposure*Experimental_state + (1|id) + (1|Exposure) + X_reduced,
data = data,
REML = FALSE)
library(powerHDX)
calculate_hdx_power
a <- readRDS("G:/HDX_sim_vol2/power_sim/regularization/results/_AAHL_power.RDS")
a
filter(a, Test == "Deuteros lm")
library(dplyr)
filter(a, Test == "Deuteros lm")
filter(a, Test == "Deuteros lm", Transformation == "log")
aa <- readRDS("G:/HDX_sim_vol2/power_sim/regularization/nice_results/_AAHL_power.RDS")
aa
aa %>%
filter(State_1 ==10, State_2 == 15, Test = "LASSO_knots_random_intercept_id")
aa %>%
filter(State_1 ==10, State_2 == 15, Test == "LASSO_knots_random_intercept_id")
a %>%
filter(State_1 ==10, State_2 == 15, Test == "LASSO_knots_random_intercept_id")
a <- readRDS("G:/HDX_sim_vol2/power_sim/regularization/results/_AAHL_power.RDS")
a %>%
filter(State_1 ==10, State_2 == 15, Test == "LASSO_knots_random_intercept_id")
calculate_hdx_power
library(powerHDX)
times = c(5, 10, 20, 30, 40, 50, 60, 100, 300, 500, 900, 1200, 1500, 1800,
2100, 2400, 3600, 7200, 21600, 43200)
spec1 <- simulate_theoretical_spectra("PPAQHI", protection_factor = 10, charge = 1:3, times = times)
spec2 <- simulate_theoretical_spectra("PPAQHI", protection_factor = 20, charge = 1:3, times = times)
spec3 <- simulate_theoretical_spectra("PPAQHI", protection_factor = 30, charge = 1:3, times = times)
spectra <- rbind(spec1, spec2, spec3)
a <- get_noisy_deuteration_curves(spectra,
compare_pairs = TRUE,
reference = "all",
n_runs = 4,
n_replicates = 10)
data <- a[[1]][[1]]
calculate_hdx_power(data)
?
calculate_hdx_power
library(powerHDX)
times = c(5, 10, 20, 30, 40, 50, 60, 100, 300, 500, 900, 1200, 1500, 1800,
2100, 2400, 3600, 7200, 21600, 43200)
spec1 <- simulate_theoretical_spectra("PPAQHI", protection_factor = 10, charge = 1:3, times = times)
spec2 <- simulate_theoretical_spectra("PPAQHI", protection_factor = 20, charge = 1:3, times = times)
spec3 <- simulate_theoretical_spectra("PPAQHI", protection_factor = 30, charge = 1:3, times = times)
spectra <- rbind(spec1, spec2, spec3)
a <- get_noisy_deuteration_curves(spectra,
compare_pairs = TRUE,
reference = "all",
n_runs = 4,
n_replicates = 10)
data <- a
calculate_hdx_power(data, tests = list(deuteros))
calculate_hdx_power(data, tests = list(deuteros), summarized = FALSE)
a = calculate_hdx_power(data, tests = list(deuteros), summarized = FALSE)
a %>%
filter(State_1 ==10, State_2 == 15)
a %>%
filter(State_1 ==10, State_2 == 20)
a %>%
filter(State_1 ==10, State_2 == 20, Transformation == "log")
S_lasso_ridge <- function(data, significance_level = 0.05) {
States = unique(data$State)
data[["id"]] <- paste0(data$Rep, data$Charge, data$Experimental_state)
Test = aic = loglik = Test_statistic = p_value = rep(NA, 2)
knots <- unique(setdiff(data$Exposure, c(max(data$Exposure), min(data$Exposure))))
X <- sapply(knots, function(k) {
truncated_lines(data$Exposure, k)
})
colnames(X) <- c(paste0("knot_", as.character(knots)))
#LASSO
cv_fit <- glmnet(X, data[["Mass"]], alpha = 1, lambda = 0.001)
coefs <- coefficients(cv_fit)
X_reduced <- cbind(intercept = 1, X)[, which(coefs != 0)]
# continuous, identity
model = lmerTest::lmer(Mass ~ Exposure*State + (1|id) + X_reduced,
data = data,
REML = FALSE)
model_reduced = lmerTest::lmer(Mass ~ Exposure + (1|id) + X_reduced,
data = data,
REML = FALSE)
result = anova(model, model_reduced)
aic[1] = AIC(model)
loglik[1] = as.numeric(logLik(model))
Test_statistic[1] = result$Chisq[2]
p_value[1] = result$`Pr(>Chisq)`[2]
Test[1] = "LASSO_knots_random_intercept_id"
#RIDGE
cv_fit <- glmnet(X, data[["Mass"]], alpha = 0, lambda = 0.001)
coefs <- coefficients(cv_fit)
X_reduced <- cbind(intercept = 1, X)[, which(abs(coefs) >= 2*10^(-5))]
# continuous, identity
model = lmerTest::lmer(Mass ~ Exposure*State + (1|id) + X_reduced,
data = data,
REML = FALSE)
model_reduced = lmerTest::lmer(Mass ~ Exposure + (1|id) + X_reduced,
data = data,
REML = FALSE)
result = anova(model, model_reduced)
aic[2] = AIC(model)
loglik[2] = as.numeric(logLik(model))
Test_statistic[2] = result$Chisq[2]
p_value[2] = result$`Pr(>Chisq)`[2]
Test[2] = "RIDGE_knots_random_intercept_id"
data.table::data.table(Test = Test,
State_1 = States[1],
State_2 = States[2],
Test_statistic = Test_statistic,
P_value = p_value,
Significant_difference = (p_value <= significance_level),
Time = NA,
Transformation = "identity",
AIC = aic,
logLik = loglik)
}
a = calculate_hdx_power(data, tests = list(S_lasso_ridge), summarized = FALSE)
a %>%
filter(State_1 ==10, State_2 == 20, Transformation == "log")
a
a %>%
filter(State_1 ==10, State_2 == 20)
a <- readRDS("G:/HDX_sim_vol2/power_sim/regularization/results/_AAHLP_power.RDS")
a %>%
filter(State_1 ==10, State_2 == 20)
a = calculate_hdx_power(data, tests = list(S_lasso_ridge, deuteros), summarized = FALSE)
a %>%
filter(State_1 ==10, State_2 == 20)
a %>%
filter(State_1 ==10, State_2 == 20, Transformation == "identity")
a <- readRDS("G:/HDX_sim_vol2/power_sim/regularization/results/_AAHLPA_power.RDS")
a
a %>%
filter(State_1 ==10, State_2 == 20, Transformation == "identity")
a <- readRDS("G:/HDX_sim_vol2/power_sim/mixed/results/_AAHL_power.RDS")
a
a %>%
filter(State_1 ==10, State_2 == 15, Test == "LASSO_knots_random_intercept_id")
library(dplyr)
a %>%
filter(State_1 ==10, State_2 == 15, Test == "LASSO_knots_random_intercept_id")
a %>%
filter(State_1 ==10, State_2 == 15)
a %>%
filter(State_1 ==10, State_2 == 15, Transformation == "identity")
